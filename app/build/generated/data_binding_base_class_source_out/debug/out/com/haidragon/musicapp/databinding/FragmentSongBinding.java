// Generated by view binder compiler. Do not edit!
package com.haidragon.musicapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.haidragon.musicapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSongBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ConstraintLayout constraintLayoutSong;

  @NonNull
  public final FrameLayout frameLayoutPlayMusic;

  @NonNull
  public final FrameLayout frameLayoutRecentSong;

  @NonNull
  public final FrameLayout frameLayoutShuffle;

  @NonNull
  public final ImageView imgPlay;

  @NonNull
  public final ImageView imgPopularSongs;

  @NonNull
  public final ImageView imgResumeSong;

  @NonNull
  public final ImageView imgShuffle;

  @NonNull
  public final LinearLayout linearLayoutPlay;

  @NonNull
  public final LinearLayout linearLayoutResume;

  @NonNull
  public final RecyclerView recyclerHome;

  @NonNull
  public final SwipeRefreshLayout swipeRefreshLayoutSong;

  private FragmentSongBinding(@NonNull LinearLayout rootView,
      @NonNull ConstraintLayout constraintLayoutSong, @NonNull FrameLayout frameLayoutPlayMusic,
      @NonNull FrameLayout frameLayoutRecentSong, @NonNull FrameLayout frameLayoutShuffle,
      @NonNull ImageView imgPlay, @NonNull ImageView imgPopularSongs,
      @NonNull ImageView imgResumeSong, @NonNull ImageView imgShuffle,
      @NonNull LinearLayout linearLayoutPlay, @NonNull LinearLayout linearLayoutResume,
      @NonNull RecyclerView recyclerHome, @NonNull SwipeRefreshLayout swipeRefreshLayoutSong) {
    this.rootView = rootView;
    this.constraintLayoutSong = constraintLayoutSong;
    this.frameLayoutPlayMusic = frameLayoutPlayMusic;
    this.frameLayoutRecentSong = frameLayoutRecentSong;
    this.frameLayoutShuffle = frameLayoutShuffle;
    this.imgPlay = imgPlay;
    this.imgPopularSongs = imgPopularSongs;
    this.imgResumeSong = imgResumeSong;
    this.imgShuffle = imgShuffle;
    this.linearLayoutPlay = linearLayoutPlay;
    this.linearLayoutResume = linearLayoutResume;
    this.recyclerHome = recyclerHome;
    this.swipeRefreshLayoutSong = swipeRefreshLayoutSong;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSongBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSongBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_song, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSongBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.constraintLayout_song;
      ConstraintLayout constraintLayoutSong = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayoutSong == null) {
        break missingId;
      }

      id = R.id.frameLayout_play_music;
      FrameLayout frameLayoutPlayMusic = ViewBindings.findChildViewById(rootView, id);
      if (frameLayoutPlayMusic == null) {
        break missingId;
      }

      id = R.id.frameLayout_recent_song;
      FrameLayout frameLayoutRecentSong = ViewBindings.findChildViewById(rootView, id);
      if (frameLayoutRecentSong == null) {
        break missingId;
      }

      id = R.id.frameLayout_shuffle;
      FrameLayout frameLayoutShuffle = ViewBindings.findChildViewById(rootView, id);
      if (frameLayoutShuffle == null) {
        break missingId;
      }

      id = R.id.img_play;
      ImageView imgPlay = ViewBindings.findChildViewById(rootView, id);
      if (imgPlay == null) {
        break missingId;
      }

      id = R.id.img_popular_songs;
      ImageView imgPopularSongs = ViewBindings.findChildViewById(rootView, id);
      if (imgPopularSongs == null) {
        break missingId;
      }

      id = R.id.img_resume_song;
      ImageView imgResumeSong = ViewBindings.findChildViewById(rootView, id);
      if (imgResumeSong == null) {
        break missingId;
      }

      id = R.id.img_shuffle;
      ImageView imgShuffle = ViewBindings.findChildViewById(rootView, id);
      if (imgShuffle == null) {
        break missingId;
      }

      id = R.id.linearLayout_play;
      LinearLayout linearLayoutPlay = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutPlay == null) {
        break missingId;
      }

      id = R.id.linearLayout_resume;
      LinearLayout linearLayoutResume = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutResume == null) {
        break missingId;
      }

      id = R.id.recycler_home;
      RecyclerView recyclerHome = ViewBindings.findChildViewById(rootView, id);
      if (recyclerHome == null) {
        break missingId;
      }

      id = R.id.swipeRefreshLayout_song;
      SwipeRefreshLayout swipeRefreshLayoutSong = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefreshLayoutSong == null) {
        break missingId;
      }

      return new FragmentSongBinding((LinearLayout) rootView, constraintLayoutSong,
          frameLayoutPlayMusic, frameLayoutRecentSong, frameLayoutShuffle, imgPlay, imgPopularSongs,
          imgResumeSong, imgShuffle, linearLayoutPlay, linearLayoutResume, recyclerHome,
          swipeRefreshLayoutSong);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

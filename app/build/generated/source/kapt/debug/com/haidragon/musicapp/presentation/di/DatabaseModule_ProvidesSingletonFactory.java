// Generated by Dagger (https://dagger.dev).
package com.haidragon.musicapp.presentation.di;

import com.haidragon.musicapp.presentation.utils.SingletonApp;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class DatabaseModule_ProvidesSingletonFactory implements Factory<SingletonApp> {
  @Override
  public SingletonApp get() {
    return providesSingleton();
  }

  public static DatabaseModule_ProvidesSingletonFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static SingletonApp providesSingleton() {
    return Preconditions.checkNotNullFromProvides(DatabaseModule.INSTANCE.providesSingleton());
  }

  private static final class InstanceHolder {
    private static final DatabaseModule_ProvidesSingletonFactory INSTANCE = new DatabaseModule_ProvidesSingletonFactory();
  }
}
